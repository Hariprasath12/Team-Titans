<!DOCTYPE html>
<html lang="en">
	<head>
		{{> head title="Carbon Footprint - Ride Stats"}}
		<style type="text/css">
			.map-container {
				height: 100%;
				opacity: .5;
			}
		</style>
	</head>
	<body>
		<div id="header">
			{{> topNav}}
		</div>
		<div id="content">
			<div class="container">
				<div class="map-container">
					<div id="map-canvas" style="width: 375px; height: 389px;">
						
					</div>
				</div>
				<div class="commute-results-container">
					<div class="commute-results">
				  		<h3>Hope you have a Nice Journey</h3>
					  	<div id="from">
					  	</div>
						<div id="to">
						</div>
						<div id="carbon-emitted">
						</div>
						<div id="carbon-saved">
						</div>
						<div id="leaf-points">
							
						</div>
					</div>
				</div>
			</div>
		</div>
		<div id="footer">
			{{> bottomNav}}
		</div>
		<script>
			// const queryString = window.location.search;
			// const urlParams = new URLSearchParams(queryString);
			let commute = JSON.parse(localStorage.getItem("commute"));
			console.log(commute);

	        const from = commute.start;
		    const to = commute.end;
		    document.getElementById('from').innerHTML=`From: ${from.toUpperCase()}`;
		    document.getElementById('to').innerHTML=`To: ${to.toUpperCase()}`;
		    const count = commute.count;
		    const ride= commute.ride;
		    const dis= commute.distance;

		    function initMap() {
		    
		      var directionsService = new google.maps.DirectionsService();
		      var directionsRenderer = new google.maps.DirectionsRenderer();
		      var map = new google.maps.Map(document.getElementById('map-canvas'), {
		        zoom: 7,
		        center: {lat: 41.85, lng: -87.65}
		      });
		      directionsRenderer.setMap(map);

		      var onChangeHandler = function() {
		        calculateAndDisplayRoute(directionsService, directionsRenderer);
		      };
		      document.body.addEventListener('load', onChangeHandler);
		    }

	        function calculateAndDisplayRoute(directionsService, directionsRenderer) {
    		    directionsService.route(
                {
                  origin: {query: from},
                  destination: {query: to},
                  travelMode: 'DRIVING'
                },
                function(response, status) {
                  if (status === 'OK') {
                    directionsRenderer.setDirections(response);
                  } else {
                    window.alert('Directions request failed due to ' + status);
                  }
                });

	        }

	        function calculateCarbon(ride) {
	        	let mileage;
	        	let leafPoints;
	        	let rideLeafPoints = 0;

	        	if(ride == "bike") {
	        		mileage = 50;
	        		leafPoints = 15;
	        	} else if(ride == "car") {
	        		mileage = 20;
	        		leafPoints = 10;
	        	} else if(ride == "bus") {
	        		mileage = 20;
	        		leafPoints = 15;
	        	} else if(ride == "train") {
	        		mileage = 100;
	        		leafPoints = 20;
	        	} else {
	        		leafPoints = 25;
	        	}

	        	
	        	let totalOccupants = commute.count;
	        	let carbonEmittedPerLitre = 2.31;

	        	let fuelRequiredPerPerson = (dis/mileage);
	        	let totalFuelRequired = ((dis/mileage)/totalOccupants);

	        	let carbonEmissionPerPerson = carbonEmittedPerLitre * fuelRequiredPerPerson;
	        	let totalCarbonEmission;
	        	let carbonSaved;

	        	console.log(carbonEmissionPerPerson);

	        	if(ride == "walk" || ride == "cycle") {
	        		carbonSaved = carbonEmittedPerLitre;
	        	} else {
	        		carbonSaved = 0;
	        	}
	        	
	        	
	        	if(totalOccupants == 1) {
	        		totalCarbonEmission = carbonEmissionPerPerson;
	        		rideLeafPoints = dis * 4;
	        	} else {
	        		totalCarbonEmission = carbonEmittedPerLitre * totalFuelRequired;
	        		carbonSaved = carbonEmissionPerPerson - totalCarbonEmission;
	        		rideLeafPoints = dis * 4 * leafPoints;
	        	}

	        	commute.totalCarbonEmission = totalCarbonEmission;
	        	commute.carbonSaved = carbonSaved;
	        	commute.rideLeafPoints = rideLeafPoints;

	        	localStorage.setItem("commute", JSON.stringify(commute));

	        	if(ride == "walk" || ride == "cycle") {
	        		document.getElementById('carbon-emitted').innerHTML="Carbon Emitted: 0. Yay! You took a cabon free ride.";
	        	} else {
	        		document.getElementById('carbon-emitted').innerHTML=`Carbon Emitted: ${totalCarbonEmission}`;
	        	}
	        	document.getElementById('carbon-saved').innerHTML=`Carbon Saved: ${carbonSaved}`;
	        	document.getElementById('leaf-points').innerHTML=`Leaf Points Earned: ${rideLeafPoints}`;
	        }

	        calculateCarbon(commute.ride);
		  
		</script>
		<script src="./dist/bundle.js"></script>
		<script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBnPKOObu8W8kngc9yiYesWpY4UHplvLao&callback=initMap">
    </script>
	</body>
</html>